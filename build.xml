<!--
// *******************************************************************************
// * Copyright (C)2014, International Business Machines Corporation and *
// * others. All Rights Reserved. *
// *******************************************************************************
-->
<project name="streamsx.shell" default="all" basedir=".">
	<description>
        Build file for streamsx.shell project, built the toolkits and samples.
    </description>
	<!-- set global properties for this build -->
	<property environment="env" />
	<property name="streams.install" value="${env.STREAMS_INSTALL}" />
	<property name="toolkit" location="com.ibm.streamsx.shell" />
	<property name="tkname" value="com.ibm.streamsx.shell" />
	<property name="tmp" location="tmp" />
	<property name="release.dir" location="release"/>
	<property name="samples.dir" location="samples"/>

	<target name="all" depends="toolkit, samples" description="Build the code and the samples index"/>

	<target name="test" depends="all">
		<exec command="${samples.dir}/autotestAll.sh" failonerror="true"/>
	</target>

	<target name="setcommitversion">
		<!-- Create the time stamp -->
		<tstamp />

		<!-- Extract the git commit hash -->
		<exec executable="git" outputproperty="commithash">
			<arg value="rev-parse" />
			<arg value="--short" />
			<arg value="HEAD" />
		</exec>

		<!-- Update the info.xml -->
		<echo message="${toolkit}/info.xml" />
		<replace file="${toolkit}/info.xml" token="__dev__" value="commit_${commithash}" summary="yes" />

		<!-- Extract info from the toolkit's info.xml -->
		<xmlproperty file="${toolkit}/info.xml" prefix="tkinfo" keepRoot="no" />

		<echo message="Toolkit Version: ${tkinfo.info:identity.info:version}" />
		<echo message="Git Hash: ${commithash}" />

	</target>

	<target name="revertversion">
		<exec executable="git">
			<arg value="checkout" />
			<arg value="--" />
			<arg value="${toolkit}/info.xml" />
		</exec>
	</target>

	<target name="clean" depends="cleansamples" description="Clean up code and samples index">
		<ant dir="${toolkit}" target="clean" />
	</target>

	<target name="toolkit" description="Build any code and index the toolkit.">
		<ant dir="${toolkit}" target="all" />
	</target>
	
	<target name="toolkitIndexOnly" description="Index the toolkit.">
		<ant dir="${toolkit}" target="indexToolkit" />
	</target>

	<target name="spldoc" depends="spldoc_work, revertversion" description="Buld the toolkit documentation"/>

	<target name="spldoc_work" depends="setcommitversion, samples">
		<exec command="${basedir}/generate-doc-here.sh" failonerror="true"/>
	</target>

	<target name="samples" depends="toolkit">
		<subant target="indextoolkit" genericantfile="${basedir}/build.xml">
			<dirset dir="samples" includes="*" />
		</subant>
	</target>

	<target name="cleansamples">
		<subant target="cleantoolkit" genericantfile="${basedir}/build.xml">
			<dirset dir="samples" includes="*" />
		</subant>
		<delete dir="samples/SampleShellPipe/output"/>
		<delete dir="samples/SampleShellPipe/log"/>
		<delete>
			<fileset dir="samples/SampleShellPipe/data" includes="*.out"/>
		</delete>
		<delete dir="samples/SampleShellSource/output"/>
		<delete dir="samples/SampleShellSource/log"/>
		<delete>
			<fileset dir="samples/SampleShellSource/data" includes="*.out"/>
		</delete>
		<delete dir="samples/SampleShellSink/output"/>
		<delete dir="samples/SampleShellSink/log"/>
		<delete>
			<fileset dir="samples/SampleShellSink/data" includes="*.out"/>
		</delete>
	</target>

	<!-- Targets called on samples -->
	<target name="indextoolkit">
		<echo message="Tookit to index: ${basedir}" />
		<exec executable="${streams.install}/bin/spl-make-toolkit">
			<arg value="--directory" />
			<arg value="${basedir}" />
		</exec>
	</target>

	<target name="cleantoolkit">
		<echo message="Tookit to clean: ${basedir}" />
		<exec executable="${streams.install}/bin/spl-make-toolkit">
			<arg value="--clean" />
			<arg value="--directory" />
			<arg value="${basedir}" />
		</exec>
	</target>

	<target name="clean_spldoc" description="Clean up the toolkit documentation">
		<echo message="Removing SPLDOC directories" />
		<delete dir="doc/"/>
		<delete dir="${toolkit}/doc/"/>
		<delete verbose="true" includeemptydirs="true">
			<fileset dir="samples" includes="*/doc/**" />
		</delete>
	</target>

	<!-- Targets to build releases -->
	<target name="release" depends="setcommitversion">
		<antcall target="clean" inheritall="True"/>
		<antcall target="all" inheritall="True"/>
		<antcall target="spldoc" inheritall="True"/>
		<mkdir dir="${release.dir}"/>
		<!-- Extract the git commit hash -->
		<exec executable="git" outputproperty="commithash.short">
			<arg value="rev-parse" />
			<arg value="--short" />
			<arg value="HEAD" />
		</exec>
		<property name="releasefilename" value="${release.dir}/com.ibm.streamsx.shell-${tkinfo.info:identity.info:version}-${commithash.short}-${DSTAMP}-${TSTAMP}.tgz" />
		<echo>Generate release archive ${releasefilename}</echo>
		<property name="exludestring" value="**/.toolkitList **/.gitignore **/.apt_generated .project ${tkname}/impl/obj/ ${tkname}/impl/Makefile ${tkname}/.project ${tkname}/.classpath ${tkname}/.cproject ${tkname}/.settings/** ${tkname}/build.xml build.xml"/>
		<tar compression="gzip" longfile="gnu"
			destfile="${releasefilename}"
			basedir="${basedir}"
			excludes="${exludestring}"
			includes="${tkname}/ samples/ doc/"
		/>
		<checksum file="${releasefilename}" />
		<checksum algorithm="sha1" file="${releasefilename}" />
	</target>

	<target name="release-src" depends="clean, cleansamples">
		<mkdir dir="${tmp}" />
		<property name="srcfilename" value="${tmp}/com.ibm.streamsx.shell-${tkinfo.info:identity.info:version}-${DSTAMP}-${TSTAMP}-src.tgz" />
		<tar compression="gzip" longfile="gnu" destfile="${srcfilename}">
            <tarfileset dir="${tkname}/.." filemode="775">
                <include name="${tkname}/impl/bin/*.pl" />
            </tarfileset>
            <tarfileset dir="${tkname}/.." filemode="664">
                <include name="${tkname}/impl/bin/*.pm" />
            </tarfileset>
            <tarfileset dir="${tkname}/.." >
                <include name="${tkname}/**" />
                <exclude name="${tkname}/impl/bin/*.pl" />
                <exclude name="${tkname}/impl/bin/*.pm" />
                <exclude name="${tkname}/.gitignore" />
            </tarfileset>
		</tar>
	</target>
</project>
